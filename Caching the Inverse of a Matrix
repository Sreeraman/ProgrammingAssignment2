makeCacheMatrix <- function(x = matrix()) {
  m<-NULL
  #set function inputs the value provided
  set<-function(y){
    x<<-y
    m<<-NULL
  }
  # then the valus which are set can be retrieved
  get<-function() x
  # This is called from the cachesolve after the inverse matrix
  # is calculated for the first time
  setmatrix<-function(solve) m<<- solve
  #Expect for the first time, if the matrix is set, then the details
  #will be retrieved from the getmatrix
  getmatrix<-function() m
  list(set=set, get=get,
       setmatrix=setmatrix,
       getmatrix=getmatrix)
}

cacheSolve <- function(x=matrix(), ...) {
  #checking if value exist already
  m<-x$getmatrix()
  if(!is.null(m)){
    message("getting cached data")
    return(m)
  }
  matrix<-x$get()
  #solve(A, b) 
  #Returns vector x in the equation b = Ax (i.e., A-1b)  
  m<-solve(matrix, ...)
  #After calculating setting in the parent function
  x$setmatrix(m)
  m
}
